# Scan this file for changes every 30 seconds
refresh_rate: 30 seconds

appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console
    encoder:
      kind: pattern
      pattern: "{d(%Y-%m-%d %H:%M:%S)} [{l}] - {m}{n}"

  # An appender named "requests" that writes to a file with a custom pattern encoder
  ss-local:
    kind: rolling_file
    path: logs/ss-local.log
    encoder:
      kind: pattern
      pattern: "{d(%Y-%m-%d %H:%M:%S)} [{l}] - {m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 50 mb
      roller:
        kind: fixed_window
        base: 0
        count: 10
        pattern: logs/ss-local.{}.log

# Set the default logging level to "debug" and attach the "stdout" appender to the root
root:
  level: info
  appenders:
    - stdout
    - ss-local

#loggers:
  # Raise the maximum log level for events sent to the "app::backend::db" logger to "info"
  #app::backend::db:
  #  level: info

  # Route log events sent to the "app::requests" logger to the "requests" appender,
  # and *not* the normal appenders installed at the root
  #app::ss-local:
  #  level: debug
  #  appenders:
  #    - ss-local
  #  additive: false
